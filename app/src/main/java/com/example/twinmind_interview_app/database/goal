
    Android Developer Interview Assignment

Overview: You can develop the application using any language or framework you prefer;
however, React Native is strongly preferred due to cross-platform consistency.
You are tasked with creating an Android application replicating the seamless functionality
demonstrated in our iOS application. Your Android app should emphasize efficient phone
storage streaming, reliable real-time transcription (with robust offline capabilities), and deliver a
user interface closely aligned with the intuitive design of our existing iOS app.
Requirements:

User Authentication:
● Implement user login functionality.
● Support OAuth-based authentication (Google Sign-In recommended, via Firebase Auth).
Google Calendar Integration:
● Allow users to connect and sync with their Google Calendar.
● Display upcoming events clearly within the app.
Real-time Meeting Transcription:
● Provide a simple and intuitive interface enabling users to start audio transcription as
meetings begin.
● Capture continuous audio input from the device’s microphone.
● Transcribe audio into periodic segments (recommended: every 30 seconds).
● Implement a robust offline-first transcription mechanism to handle intermittent network

connectivity:
○ Utilize phone storage for temporary buffering of audio chunks.
○ Develop reliable syncing strategies to ensure no transcription data is lost, even
when connectivity drops.
○ Implement intelligent retry and re-syncing mechanisms when reconnecting.
● Use OpenAI Speech-to-Text API or Google Gemini 2.0 Flash for transcription services.
Interactive Transcript Chat:
● Allow users to chat interactively with the full meeting transcript both during and after
meetings.
● Use OpenAI or Google Gemini APIs, taking transcript segments and user queries as
input.
● Implement streaming responses for interactive, real-time chat.
Automatic Summary Generation:
● After meetings, automatically generate concise and structured summaries.
● Present clearly segmented meeting notes.
Local and Online Storage:
● Implement efficient storage and synchronization between local device storage
(SQLite/Room or Jetpack DataStore recommended) and cloud storage.
● Ensure seamless synchronization of transcripts and summaries across sessions and
devices.

Backend Development:
● Create a robust backend capable of:
○ Managing OAuth authentication and session handling.
○ Processing and temporarily storing audio data and transcripts (use dummy
endpoints acceptable for ASR).
○ Storing and retrieving meeting data securely for authenticated users.

Error Handling:
● Implement comprehensive error management strategies for:
○ Authentication failures and OAuth token expiration.
○ Audio processing errors and recording interruptions.
○ Connectivity issues with Google Calendar and transcription APIs.
○ Handling and recovering lost or corrupted audio chunks.
○ Ensure robust transition with bluetooth devices route changes, and audio
interruptions


Testing:
● Write comprehensive unit tests covering authentication, calendar integration, audio
transcription, and summary generation.
● Provide a basic load testing outline to showcase backend scalability and reliability.
Design Guidelines:
● Design your Android app to closely resemble the intuitive user experience of our existing
iOS application.
● Ensure clear navigation, minimal user friction, and responsive interactions.
● Optimize UI for various Android devices and screen sizes.
Evaluation Criteria:
● Seamless and reliable user authentication experience.
● Accuracy, readability, and reliability of periodic audio transcriptions.
● Quality and practicality of auto-generated meeting summaries.
● Robustness of offline transcription and error-handling solutions.
● Scalability, maintainability, and overall quality of backend architecture.
● UI/UX fidelity to the provided iOS app reference.
Video walkthrough of the app:
TwinMind Tutorial Video - YouTube
App Screenshots








     */
